#!/bin/bash

# If eb is missing do this one-time initialization:
#       brew install awsebcli

set -e  # Exit on error

APP_NAME="birddog"
ENV_NAME="birddog-env"
REGION="us-east-1"
PLATFORM="Python 3.12"

function init() {
  echo "üîß Running EB init setup..."
  eb init "$APP_NAME" --platform "$PLATFORM" --region "$REGION"
  echo "‚úÖ Setup complete."
}

function deploy_app() {
  if eb list | grep -Fxq "$ENV_NAME"; then
    echo "üöÄ Environment '$ENV_NAME' already exists. Skipping creation."
  else
    echo "üöÄ Creating Elastic Beanstalk environment: $ENV_NAME..."
    eb create "$ENV_NAME"
    echo "‚úÖ Environment created."
  fi

  echo "üîê Setting environment variables from shell..."
  eb setenv \
    AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
    AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION" \
    AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
    OPENAI_API_KEY="$OPENAI_API_KEY" \
    BIRDDOG_SECRET_KEY="$BIRDDOG_SECRET_KEY" \
    BIRDDOG_SMTP_PASSWORD="$BIRDDOG_SMTP_PASSWORD" \
    BIRDDOG_SMTP_PORT="$BIRDDOG_SMTP_PORT" \
    BIRDDOG_SMTP_SERVER="$BIRDDOG_SMTP_SERVER" \
    BIRDDOG_SMTP_USERNAME="$BIRDDOG_SMTP_USERNAME"

  echo "üì¶ Deploying application..."
  eb deploy

  echo "üìä Checking environment status..."
  eb status

  echo "‚úÖ Deployment complete."
}

function terminate_env() {
  echo "üî• Terminating environment: $ENV_NAME"
  eb terminate "$ENV_NAME" --force 
  echo "‚úÖ Environment terminated."
}

case "$1" in
  init)
    init
    ;;
  deploy)
    deploy_app
    ;;
  terminate)
    terminate_env
    ;;
  open)
    eb open
    ;;
  status)
    eb status
    ;;
  *)
    echo "Usage: $0 {init|deploy|open|status|terminate}"
    exit 1
    ;;
esac
